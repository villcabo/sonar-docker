# SonarQube Configuration
# Copy this file to .env and update the values as needed

# SonarQube version (use official Docker image tags from https://hub.docker.com/_/sonarqube/)
SONAR_VERSION=latest

# Network configuration
# Format: [HOST:]HOST_PORT:CONTAINER_PORT
# Examples:
# - SONAR_PORT=127.0.0.1:9000:9000  # Localhost only (default)
# - SONAR_PORT=9000:9000            # Accessible from all network interfaces
SONAR_PORT=127.0.0.1:9000:9000

# Directory configuration (relative to project root or absolute path)
SONAR_DIR=./sonar-data

# Database configuration
# Format: jdbc:postgresql://<host>:<port>/<database>
SONAR_JDBC_URL=jdbc:postgresql://192.168.0.12:5432/sonar

# Database credentials
SONAR_JDBC_USERNAME=postgres
SONAR_JDBC_PASSWORD=postgres

# Java options for SonarQube web server
# Adjust memory settings based on your system resources
SONAR_WEB_JAVAOPTS=-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError

# Java options for SonarQube search server
SONAR_SEARCH_JAVAOPTS=-Xmx512m -Xms512m -XX:+HeapDumpOnOutOfMemoryError

# Security settings (uncomment and modify as needed)

# Change the default admin password on first login
# SONAR_ADMIN_PASSWORD=admin

# Set web context if running behind a reverse proxy
# SONAR_WEB_CONTEXT=/sonarqube

# Enable force authentication (recommended for production)
# SONAR_FORCE_AUTHENTICATION=true

# Enable HTTPS (requires proper SSL certificates)
# SONAR_WEB_JAVA_ADD_OPTS=-Dsonar.web.javaAdditionalOpts=-Djavax.net.ssl.trustStore=/path/to/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit